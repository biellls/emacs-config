((("pr-str" .
   [0 0 0 0 0 1])
  ("get-table-values" .
   [0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0])
  (".getValueAt" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("column-key" .
   [2 0 0 0 0 0 0 0 0 0])
  ("nrows" .
   [2 0 0 0 0])
  ("ncols" .
   [3 0 0 0 0])
  ("make-table" .
   [6 0 0 0 0 0 0 0 0 0])
  ("swc" .
   [1 0 0])
  ("frame-content" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("texto" .
   [5 0 0 0 0])
  ("class_" .
   [1 0 0 0 0 0])
  ("chiste" .
   [2 0 0 0 0 0])
  ("soup" .
   [1 0 0 0])
  ("chistes" .
   [2 0 0 0 0 0 0])
  ("requests" .
   [1 0 0 0 0 0 0 0])
  ("html_doc" .
   [1 0 0 0 0 0 0 0])
  ("messages" .
   [1 0 0 0 0 0 0 0])
  ("clojure-search" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  (":params" .
   [1 0 0 0 0 0 0])
  (":oauth-creds" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("my-creds" .
   [1 0 0 0 0 1 0 0])
  ("set" .
   [1 0 0])
  ("@fork" .
   [2 0 0 0 0])
  ("forks" .
   [6 0 0 0 0])
  ("eliminarNoFrecuentes" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("freqIts_kMinus1" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("sfi" .
   [1 0 0])
  ("subsets" .
   [1 0 0 0 0 0 0])
  ("itertools" .
   [1 0 0 0 0 0 0 0 0])
  ("podar" .
   [1 0 0 0 0])
  ("freqIts_kPlus1" .
   [0 0 0 0 1 0 0 0 0 2 0 0 0 1])
  ("combineFreqIts" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("hiHaCanvis" .
   [0 0 2 0 0 0 0 0 0 0])
  ("freqIts" .
   [8 0 0 1 0 1 0])
  ("result" .
   [11 0 0 0 0 0])
  ("partitionTransactions" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("min_conf" .
   [1 0 0 0 0 0 0 0])
  ("min_sup" .
   [2 0 0 0 0 0 0])
  ("FreqItemsets" .
   [0 0 0 0 2 0 0 0 0 0 0 0])
  ("beta-hat0" .
   [1 0 0 0 0 0 0 0 1])
  ("beta-hat1" .
   [2 0 0 0 1 0 0 0 1])
  ("matrix-var-covar" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("meanr" .
   [1 0 0 0 0])
  ("smult" .
   [2 0 0 0 0])
  ("uniform-row-matrix" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("uniform-vector-column" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("mprod" .
   [2 0 0 0 0])
  ("uniform-vector-row" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("transpose" .
   [0 0 0 0 0 0 1 0 1])
  ("covar" .
   [2 0 0 0 0])
  ("variance" .
   [1 0 0 0 0 0 0 0])
  ("increment-freq" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("freqs" .
   [3 0 0 0 0])
  ("NULL" .
   [1 0 0 0])
  ("FALSE" .
   [1 0 0 0 0])
  ("movAnt" .
   [0 0 1 0 0 0])
  ("ESQUERRA" .
   [6 0 0 0 0 0 0 0])
  ("ESQ" .
   [1 0 0])
  ("SUD" .
   [8 0 0])
  ("DRETA" .
   [10 0 0 0 0])
  ("NORD" .
   [8 0 0 0])
  ("seguint" .
   [4 0 0 0 1 0 0])
  ("points" .
   [20 0 0 0 0 0])
  ("finished" .
   [2 0 0 0 0 0 0 0])
  ("simulacion-empezada" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  (":p" .
   [1 0])
  ("@nsabanas" .
   [1 0 0 0 0 0 0 0 0])
  ("con" .
   [1 0 0])
  ("selected-items" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("playground" .
   [1 0 0 0 0 0 0 0 0 0])
  ("minxt" .
   [1 0 0 0 0])
  ("35" .
   [1 0])
  ("minxs" .
   [1 0 0 0 0])
  ("input-text" .
   [0 0 0 0 0 0 0 0 0 1])
  (":class" .
   [1 0 0 0 0 0])
  (":div.row" .
   [5 0 0 0 0 0 0 0])
  ("Integer." .
   [2 0 0 0 0 0 0 0])
  ("@ntoallas" .
   [3 0 0 0 0 0 0 0 0])
  ("str/join" .
   [1 0 0 0 0 0 0 0])
  ("@estados-sim" .
   [3 0 0 0 0 0 0 0 1 0 0 0])
  (":tr" .
   [2 0 0])
  (":td" .
   [6 0 0])
  (":th" .
   [1 0 0])
  (":div.container" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ANY" .
   [3 0 0])
  ("GET" .
   [1 0 0])
  ("json-response-format" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("nsecadoras" .
   [2 0 0 0 0 0 0 0 0 0])
  (":nsecadoras" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("nsabanas" .
   [2 0 0 0 0 0 0 0])
  (":nsabanas" .
   [1 0 0 0 0 0 0 0 0])
  ("ntoallas" .
   [3 0 0 0 0 0 0 0])
  (":ntoallas" .
   [1 0 0 0 0 0 0 0 0])
  (":br" .
   [4 0 0])
  ("ajax-routes" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("mejort" .
   [2 0 0 0 0 0])
  ("tes" .
   [1 0 0])
  (":h1" .
   [1 0 0])
  ("physics-page" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":physics" .
   [1 0 0 0 0 0 0 0])
  ("click" .
   [1 0 0 0 0])
  ("html/text" .
   [2 0 0 0 0 0 0 0 0])
  ("selectors" .
   [3 0 0 0 1 0 0 0 0])
  ("fetch-stories" .
   [2 0 0 0 0 0 0 0 0 0 1 0 0])
  ("news" .
   [1 0 0 0])
  ("new-news" .
   [1 0 0 0 0 1 1 0])
  ("old-news" .
   [1 0 0 0 0 0 1 0])
  ("current-news" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("count" .
   [1 0 0 0 0])
  ("noticias-marca-columna1" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 1])
  ("html-site" .
   [7 0 0 1 1 0 0 0 0])
  ("####COLUMNA" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("noticias-marca-columna" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("noticia-principal-marca" .
   [0 0 0 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("print-news" .
   [2 0 0 0 0 0 0 0 1 0])
  ("site" .
   [1 0 0 0])
  (":div#colum2" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":div#contenido" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("subtit" .
   [1 0 0 0 0 0])
  ("tit" .
   [1 0 0])
  ("noticias-marca" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("*base-url*" .
   [1 0 0 0 1 2 0 0 0 0])
  ("bases" .
   [0 0 0 0 1])
  ("fetch-url" .
   [0 0 0 0 1 2 0 0 1])
  ("a-promise" .
   [1 0 0 0 0 0 0 0 0])
  ("my-promise" .
   [0 0 1 0 0 0 0 0 0 0])
  ("16" .
   [1 0])
  ("getchar" .
   [1 0 0 0 0 0 0])
  ("keyPressed" .
   [0 0 0 1 0 0 0 0 0 1])
  ("argc" .
   [1 0 0 0])
  ("argv" .
   [1 0 0 0])
  ("processKeyUp" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("mappedKey" .
   [0 0 0 0 0 0 1 0 0])
  ("0x2" .
   [1 0 0])
  ("0x1" .
   [1 0 0])
  ("mapKey" .
   [3 0 0 0 0 1])
  ("skeq2" .
   [1 0 0 0 0])
  ("skne1" .
   [1 0 0 0 0])
  ("bcd" .
   [1 0 0])
  ("randnum" .
   [1 0 0 0 0 0 0])
  ("addi" .
   [1 0 0 0])
  ("ssound" .
   [1 0 0 0 0 0])
  ("gdelay" .
   [1 0 0 0 0 0])
  ("ldr" .
   [1 0 0])
  ("str" .
   [1 0 0])
  ("sdelay" .
   [1 0 0 0 0 0])
  ("skpr" .
   [1 0 0 0])
  ("skup" .
   [1 0 0 0])
  ("chip8TableFXX5" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("instrFXX5" .
   [0 0 0 0 0 1 0 0 0])
  ("rand" .
   [1 0 0 0])
  ("jmi" .
   [1 0 0])
  ("mvi" .
   [1 0 0])
  ("skne2" .
   [1 0 0 0 0])
  ("shl" .
   [1 0 0])
  ("rsb" .
   [1 0 0])
  ("shr" .
   [1 0 0])
  ("sub" .
   [1 0 0])
  ("font" .
   [2 0 0 0])
  ("key" .
   [7 0 0])
  ("sprite" .
   [2 0 0 0 0 0])
  ("add2" .
   [2 0 0 0])
  ("a" .
   [1])
  ("instr8" .
   [2 0 0 0 0 0])
  ("add1" .
   [1 0 0 0])
  ("mov1" .
   [2 0 0 0])
  ("skne" .
   [2 0 0 0])
  ("skeq1" .
   [1 0 0 0 0])
  ("instr0" .
   [0 0 0 1 0 0])
  ("cls" .
   [1 0 0])
  ("callRCA" .
   [2 0 0 0 0 0 0])
  ("i" .
   [1])
  ("index" .
   [3 0 0 0 0])
  ("chip8Table0" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("struct" .
   [0 0 0 0 1 0])
  ("skeq" .
   [1 0 0 0])
  ("jsr" .
   [1 0 0])
  ("address" .
   [2 0 0 0 0 0 0])
  ("NNN" .
   [2 0 0])
  ("512" .
   [1 0 0])
  ("skipEqual" .
   [0 0 0 0 0 1 0 0 0])
  ("call" .
   [1 0 0 0])
  ("jmp" .
   [1 0 0])
  ("0x00EE" .
   [1 0 0 0 0 0])
  ("printf" .
   [4 0 0 0 0 0])
  ("writeExampleProgram" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("fclose" .
   [1 0 0 0 0 0])
  ("fp" .
   [4 0])
  ("programName" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("s" .
   [2])
  ("drawFlag" .
   [0 0 0 0 0 0 0 2])
  ("emulateCycle" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("myChip8" .
   [2 0 1 1 0 1 3])
  ("loadProgram" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("myChip" .
   [1 0 0 0 0 0])
  ("initialize" .
   [0 0 0 0 0 1 0 0 0 0])
  (":solution" .
   [1 0 0 0 0 0 0 0 0])
  ("number-strings" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("spit" .
   [1 0 0 0])
  ("Long." .
   [2 0 0 0 0])
  ("lib.hts-connect" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("numbers" .
   [4 0 0 0 0 0 0])
  ("re-pattern" .
   [0 0 0 0 0 1 0 1 0 0])
  ("str/split" .
   [0 0 0 0 1 0 0 0 0])
  ("get-separator" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("encoded" .
   [5 0 0 0 0 0 1])
  ("separator" .
   [1 0 0 0 2 0 1 0 0])
  ("decode" .
   [2 0 0 0 0 0])
  ("encoded-string" .
   [0 0 0 0 0 0 1 0 0 1 0 0 0 0])
  ("decoded-string" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  (":form-params" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("url" .
   [5 0 0])
  ("client/post" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("answer" .
   [2 0 0 0 0 0])
  ("post-answer" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("get-page" .
   [2 0 0 0 0 0 0 0])
  (":cookies" .
   [2 0 0 0 0 0 0 0])
  ("client/get" .
   [1 0 0 0 0 0 0 0 0 0])
  (":body" .
   [2 0 0 0 0])
  ("cookies" .
   [6 0 0 0 0 0 0])
  ("urn" .
   [4 0 0])
  ("base-url" .
   [1 0 0 0 0 1 1 0])
  ("login" .
   [1 0 0 0 0])
  ("user" .
   [1 0 0 0])
  ("password" .
   [4 0 0 0 0 0 0 0])
  ("username" .
   [4 0 0 0 0 0 0 0])
  ("tsb" .
   [1 0 0])
  ("lit" .
   [1 0 0])
  ("nodevalor" .
   [0 0 0 0 0 0 0 1 0])
  ("roll-dice" .
   [0 0 0 0 0 0 1 0 0])
  ("rand-int" .
   [0 0 0 0 0 1 0 0])
  (":TE" .
   [1 0 0])
  (":TND" .
   [1 0 0 0])
  ("Succ" .
   [1 0 0 0])
  ("Pred" .
   [1 0 0 0])
  ("nbb" .
   [3 0 0])
  ("TND" .
   [2 0 0])
  ("TND-inicial" .
   [0 0 1 1 0 0 1 0 0 0 0])
  ("instrs" .
   [2 0 0 0 0 0])
  (":ii" .
   [1 0 0])
  ("TE-inicial" .
   [1 0 1 1 0 0 0 0 0 0])
  (":ne" .
   [1 0 0])
  (":eq" .
   [1 0 0])
  (":ge" .
   [1 0 0])
  (":le" .
   [1 0 0])
  (":gt" .
   [1 0 0])
  ("opcond" .
   [1 0 0 0 0 0])
  ("i3a" .
   [2 0 0])
  ("salt-cond?" .
   [0 0 0 0 1 0 0 0 0 0])
  (":ei" .
   [1 0 0])
  (":goto" .
   [1 0 0 0 0])
  (":resta" .
   [1 0 0 0 0 0])
  (":suma" .
   [1 0 0 0 0])
  (":ef" .
   [2 0 0])
  (":t1" .
   [1 0 0])
  (":etiq" .
   [2 0 0 0 0])
  (":copia" .
   [2 0 0 0 0 0])
  ("example-c3a" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("number-button" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("alert" .
   [1 0 0 0 0])
  ("enter-action" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("add-watch" .
   [0 0 0 0 0 0 0 0 1])
  ("lbl-rz" .
   [0 0 1 0 0 0])
  ("lbl-rt" .
   [0 0 0 1 0 0])
  ("lbl-ry" .
   [1 0 0 1 0 0])
  ("conj" .
   [0 0 0 1])
  ("regx" .
   [1 0 0 0])
  ("@screen-text" .
   [0 0 0 0 0 0 0 2 0 0 0 0])
  ("reset-screen!" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("screen-text" .
   [0 0 0 0 0 0 0 0 0 0 1])
  (":text" .
   [7 0 0 0 0])
  ("screen" .
   [2 0 0 0 0 0])
  ("config!" .
   [2 0 0 0 1 0 0])
  ("refresh-screen" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0 0])
  ("regy" .
   [1 0 0 0])
  ("regz" .
   [1 0 0 0])
  ("regt" .
   [1 0 0 0])
  ("Register" .
   [0 0 0 0 0 2 0 0])
  ("next-yx" .
   [1 0 1 0 0 0 0])
  ("current-yx" .
   [2 0 0 0 0 0 0 0 0 1])
  ("goal-yx" .
   [1 0 0 0 0 0 0])
  ("square-cost" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("current-cost" .
   [1 0 0 0 0 0 0 0 0 0 0 1])
  ("newcell" .
   [1 0 0 0 0 0 0])
  ("cell-row" .
   [0 0 0 0 1 0 0 0])
  ("newparent" .
   [0 0 0 0 1 0 0 0 0])
  (":current-cost" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0])
  ("get-cell" .
   [2 0 0 0 0 1 0 0])
  ("get-in" .
   [0 0 0 0 1 0])
  ("cell" .
   [2 0 0 0])
  (":accum" .
   [1 0 0 0 0 0])
  (":h" .
   [2 0])
  ("current-square" .
   [0 0 0 0 0 0 0 5 0 1 0 0 0 0])
  ("goal-square" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("solution" .
   [0 0 0 1 0 0 0 0])
  ("step-cost" .
   [2 0 0 1 0 0 0 0 1])
  ("total-cost" .
   [0 0 0 0 0 1 0 0 0 0])
  ("rest-work-todo" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":parent" .
   [4 0 0 0 0 0 0])
  ("steps" .
   [8 0 0 1 0])
  ("newcost" .
   [4 0 0 0 0 0 1])
  ("oldcost" .
   [2 0 0 0 0 0 0])
  ("world-map" .
   [4 0 0 0 1 0 1 0 7])
  ("path-cost" .
   [0 0 0 0 0 0 0 0 1])
  ("nbr-yxs" .
   [1 0 0 1 0 0 0])
  (":cost" .
   [3 0 0 0 0])
  ("min-by" .
   [1 0 0 0 0 0])
  ("neighbor" .
   [0 0 0 0 0 0 0 1])
  ("work-todo" .
   [0 0 0 0 0 0 0 0 1])
  ("solution-map" .
   [1 0 0 6 0 0 0 0 0 0 0 0])
  ("backtrace" .
   [3 0 0 0 0 0 0 0 0])
  ("start-yx" .
   [1 0 0 0 0 2 0 0])
  ("cell-costs" .
   [1 0 0 0 1 0 0 0 0 0])
  ("cheapest-nbr" .
   [2 0 0 1 2 0 0 0 0 0 0 0])
  ("node-cost" .
   [1 0 0 0 0 0 0 0 0])
  ("step-num" .
   [1 0 0 0 0 0 0 0])
  ("step-cost-est" .
   [0 0 0 0 1 1 0 1 0 0 0 0 1])
  ("priority-map-keyfn" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("best" .
   [8 0 0 0])
  ("closed" .
   [1 0 0 0 0 0])
  ("istate" .
   [1 0 0 0 0 0])
  ("open" .
   [11 0 0 0])
  ("initial" .
   [3 0 0 0 0 0 0])
  ("parent" .
   [1 0 0 0 0 0])
  ("cities" .
   [1 0 0 0 0 0])
  ("defrecord" .
   [0 0 0 0 0 0 0 0 1])
  ("Pitesti" .
   [1 0 0 0 0 0 0])
  ("Zerind" .
   [1 0 0 0 0 0])
  ("weighted-graph" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("Weighted" .
   [0 0 0 0 0 1 0 0])
  ("pvrest" .
   [2 0 0 0 0 0])
  ("pair" .
   [3 0 0 0])
  ("pvalues" .
   [0 0 1 0 0 0 0])
  ("pairvals" .
   [1 0 0 0 0 0 0 0])
  ("h-sld" .
   [2 0 1 1 0])
  ("priority-map" .
   [0 0 0 0 1 0 2 0 0 0 0 0])
  ("naturals" .
   [2 0 0 0 0 0 0 0])
  ("invert" .
   [1 0 0 0 0 0])
  ("iterate" .
   [0 0 0 0 0 0 2])
  ("previous" .
   [0 0 0 0 1 0 0 0])
  ("change" .
   [3 0 0 0 0 0])
  ("limit" .
   [3 0 0 0 0])
  ("factorial" .
   [6 0 0 1 1 0 0 0 0])
  ("mul-streams" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("cons-stream" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("lazy" .
   [1 0 0 0])
  ("crack-grid" .
   [0 0 0 1 0 0 0 0 0 0])
  ("sep" .
   [1 0 0])
  ("print-grid" .
   [0 0 0 0 0 0 0 1 0 0])
  ("arrange-grid" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("arranged" .
   [0 0 0 0 1 0 0 0])
  ("grid" .
   [6 0 0 0])
  ("ncolumns" .
   [1 0 1 0 0 0 0 0])
  ("Math/ceil" .
   [1 0 0 0 0 0 0 0 0])
  ("columns" .
   [2 0 0 0 0 0 0])
  (":T" .
   [1 0])
  (":F" .
   [2 0])
  (":I" .
   [2 0])
  (":V" .
   [1 0])
  ("acaba" .
   [3 0 0 0 0])
  (":E" .
   [4 0])
  (":Q" .
   [1 0])
  (":S" .
   [8 0])
  ("diferencia-simbols" .
   [0 0 0 0 1 1 0 1 0 0 1 0 0 0 0 0 0 0])
  ("vars" .
   [3 0 0 0])
  ("canvis" .
   [7 0 0 0 0 0])
  ("mostra" .
   [4 0 0 0 0 0])
  (":head" .
   [5 0 0 0 0])
  (":grammar" .
   [3 0 0 0 1 0 0 0])
  ("opts" .
   [5 0 0 0])
  ("options" .
   [3 0 0 0 0 0 0])
  ("hash-map" .
   [0 0 0 0 0 0 0 1])
  ("calcula-first" .
   [1 0 0 0 0 0 0 0 0 0 0 0 2])
  ("gramatica" .
   [1 0 0 0 0 0 0 0 1])
  ("first-follow.first" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("first-follow.gram" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("clojure.set" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("collision" .
   [2 0 0 0 0 0 0 0 0])
  ("make-line" .
   [1 0 0 0 0 0 1 1 0])
  ("make-vel" .
   [1 0 0 0 0 0 1 2])
  ("make-circle" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("alg/ex" .
   [2 0 0 0 0 0])
  ("alg/solve" .
   [1 0 0 0 0 0 0 0 0])
  ("missatge" .
   [2 0 0 0 0 0 0 0])
  ("rebut" .
   [1 0 0 0 0])
  ("esperat" .
   [1 0 0 0 0 0 0])
  ("pila" .
   [3 0 0 0])
  ("prod" .
   [5 0 0 0])
  ("empila-derivacions" .
   [0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0])
  ("stream" .
   [10 0 0 0 0 0])
  ("doc" .
   [0 0 2])
  ("TLL" .
   [2 0 0])
  ("terminal?" .
   [0 0 0 0 0 0 1 0 0])
  ("input" .
   [9 0 0 1 0])
  ("taula_TLL" .
   [0 0 0 1 0 0 0 0 0])
  ("p2:" .
   [0 0 1])
  ("p1:" .
   [0 0 1])
  (":C_A" .
   [3 0 0 0])
  (":derivacions" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  (":cap" .
   [2 0 0 0])
  ("setq" .
   [1 0 0 0])
  ("digital-read" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("Thread/sleep" .
   [1 0 0 0 0 1 1 0 0 0 0 0])
  ("digital-write" .
   [0 0 0 0 0 0 0 0 0 1 0 1 0])
  ("this" .
   [2 0 0 0])
  ("coll" .
   [10 0 0 0])
  ("node-cost-est" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("estimate-cost" .
   [0 0 0 0 0 1 0 0 0 0 0 0 1])
  ("matrix" .
   [1 0 0 0 0 0])
  ("coord" .
   [1 0 0 0 0])
  ("Math/abs" .
   [1 0 0 0 0 0 0 0])
  ("same-diagonal?" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("same-col?" .
   [1 0 0 0 0 0 0 0 0])
  ("same-row?" .
   [1 0 0 0 0 0 0 0 0])
  ("same-diagonal" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0])
  ("same-col" .
   [0 0 0 0 1 0 0 0])
  ("row" .
   [15 0 0])
  ("col" .
   [10 0 0])
  ("queens" .
   [11 0 0 0 0 0])
  ("safe?" .
   [6 0 0 0 0])
  ("rows" .
   [7 0 0 0])
  ("rest-queens" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("try-row" .
   [1 0 0 0 0 0 0])
  ("fill-cols" .
   [2 0 0 0 1 0 0 1 0])
  ("triangular" .
   [1 0 0 0 0 0 0 0 0 0])
  ("take-while" .
   [0 0 0 0 0 0 1 0 0 0])
  ("primes" .
   [10 0 0 0 0 0])
  ("factor?" .
   [1 0 0 0 0 0 2])
  ("problem6" .
   [1 0 0 0 0 0 0 0])
  ("sieve" .
   [4 0 0 1 0])
  ("bsprime?" .
   [0 0 0 0 1 0 0 0])
  ("lazyprimes" .
   [0 0 0 0 0 3 0 0 0 2])
  ("makebs" .
   [1 0 0 0 0 0])
  (".set" .
   [1 0 0 0])
  ("remove-multiples" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("bs" .
   [16 0])
  ("prime-numbers" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("diff" .
   [1 0 0 0])
  ("sum-of-squares" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("square-of-sum" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("square-numbers" .
   [0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("sqns" .
   [2 0 0 0])
  ("timestable" .
   [0 0 0 0 0 1 0 0 0 0])
  ("fp2" .
   [1 0 0])
  ("fp1" .
   [5 0 0])
  (":draw" .
   [3 0 0 0 0])
  ("update-text" .
   [0 0 0 0 0 0 0 0 0 1 0])
  (":winners" .
   [1 0 0 0 0 0 0 0])
  ("write-round-winner" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("->>" .
   [9 0 0])
  ("player-key" .
   [5 0 0 0 0 0 1 0 0 1])
  ("top-card" .
   [0 0 0 1 0 0 0 3])
  ("TODO" .
   [1 0 0 0])
  ("draw-card-slot" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("CARDWIDTH" .
   [1 0 0 1 1 0 0 0 0])
  ("500" .
   [2 0 0])
  ("draw-my-card" .
   [1 0 0 0 0 0 0 1 0 0 0 1])
  ("150" .
   [1 0 0])
  ("posy2" .
   [2 0 0 0 0])
  ("posy1" .
   [2 0 0 0 0])
  ("offset" .
   [4 0 0 2 0 0])
  ("starty" .
   [1 0 0 0 0 0])
  ("startx" .
   [1 0 0 0 0 0])
  ("upside-down" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("q/load-image" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("path" .
   [12 0 0 0])
  ("q/image" .
   [1 0 0 0 0 0 0])
  ("draw-card" .
   [4 0 0 0 0 1 0 0 0])
  ("draw-deck" .
   [1 0 0 0 0 0 0 0 0])
  ("ymargin" .
   [0 0 1 0 0 0 0])
  ("sheight" .
   [3 0 0 0 0 0 0])
  ("swidth" .
   [3 0 0 0 0 0])
  ("WIDTH" .
   [7 0 0 0 0])
  ("HEIGHT" .
   [3 0 1 3 0 0])
  ("650" .
   [1 0 0])
  ("200" .
   [1 0 0])
  ("draw-slot" .
   [2 0 0 0 0 0 0 0 0])
  ("q/rect" .
   [1 0 0 0 0 0])
  ("draw-slots" .
   [1 0 0 0 0 0 0 1 0 0])
  ("make-card" .
   [2 0 0 0 0 0 0 0 0])
  ("Card." .
   [1 0 0 0 0])
  ("suit" .
   [2 0 0 0])
  ("print-card" .
   [3 0 0 0 0 0 0 0 0 0])
  ("true" .
   [17 0 0 0])
  ("in" .
   [18 0])
  ("expect" .
   [2 0 0 0 0 0])
  ("is" .
   [15 0])
  (":only" .
   [3 0 0 0 0])
  (":use" .
   [3 0 0 0])
  ("deal-cards" .
   [3 0 0 0 0 0 0 0 0 0])
  (":number" .
   [1 0 0 0 0 0 0])
  ("truc.deck" .
   [2 0 0 0 0 0 0 0 0])
  ("truc.hand" .
   [1 0 0 0 0 0 0 0 0])
  ("truc.table" .
   [2 0 0 0 0 0 0 0 0 0])
  (":slot" .
   [1 0 0 0 0])
  ("clear-table" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("write-winner" .
   [3 0 0 0 0 0 0 0 0 0 0 1])
  (":player1" .
   [1 0 0 0 0 0 0 0])
  ("reset-game!" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("empty-table" .
   [1 0 0 0 0 0 0 0 0 1 0])
  ("empty-player" .
   [0 0 0 1 0 0 0 0 2 0 0 0])
  ("Table" .
   [1 0 0 0 0])
  ("Player." .
   [1 0 0 0 0 0 0])
  ("show-winner" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("get-winners" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("show-table" .
   [0 0 0 1 0 0 0 0 0 0])
  ("false" .
   [11 0 0 0 0])
  ("empty?" .
   [0 0 1 0 0 1])
  ("auto-play-card!" .
   [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("place-card!" .
   [2 0 0 0 0 0 0 0 0 0 0])
  ("choice" .
   [2 0 0 0 0 0])
  ("read-line" .
   [0 0 0 1 0 1 0 0 0])
  ("play-card!" .
   [0 0 0 0 0 1 0 0 0 0])
  ("final-winner" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("game-won" .
   [2 0 0 0 3 1 0 0])
  ("running" .
   [1 0 0 0 0 0 0])
  ("next-round!" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("winners" .
   [4 0 0 0 0 0 0])
  ("winner" .
   [15 0 0 0 0 0])
  ("p2" .
   [3 0])
  ("card2" .
   [7 0 0 0 0])
  ("card1" .
   [6 0 0 0 0])
  ("fight" .
   [2 0 1 0 0])
  (":round" .
   [3 0 0 0 0 0])
  ("remove-card!" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("round" .
   [6 0 0 0 0])
  (":score" .
   [1 0 0 0 0 0])
  ("score" .
   [7 0 0 0 0])
  (":card2" .
   [8 0 0 0 0 0])
  (":card1" .
   [10 0 0 0 0 0])
  ("Table." .
   [1 0 0 0 0 0])
  ("reset!" .
   [0 0 0 0 1 1])
  ("player-slot" .
   [0 0 0 0 0 0 0 0 0 1 0])
  ("p1" .
   [6 0])
  ("slot" .
   [16 0 0 0])
  ("table" .
   [71 0 2 1 0])
  ("place-card" .
   [2 0 0 0 0 1 0 0 0 4])
  (":pre" .
   [5 0 0 0])
  ("card-num" .
   [3 0 1 0 1 1 0 2])
  ("cards" .
   [3 0 0 0 0])
  ("de" .
   [8 0])
  ("truc.core" .
   [0 0 0 0 0 0 1 0 0])
  ("class" .
   [0 0 0 0 1])
  ("entity" .
   [2 0 0 1 0 0])
  ("instance?" .
   [0 0 0 0 0 1 0 0 0])
  ("defmulti" .
   [0 0 0 0 0 1 1 0])
  ("show-cards" .
   [1 0 0 1 1 0 0 0 0 0])
  ("defmethod" .
   [0 0 0 0 0 0 1 2 0])
  ("truc.truc" .
   [0 0 0 0 0 1 0 0 0])
  ("card" .
   [25 0 0 0])
  ("make-deck" .
   [1 0 0 0 1 0 0 1 0])
  ("hand" .
   [11 0 0 0])
  (":hand" .
   [8 0 0 1 0])
  ("deal" .
   [4 0 0 0])
  ("deck" .
   [4 0 0 0])
  ("propagate" .
   [1 0 0 0 0 0 0 0 0])
  ("carry" .
   [2 0 0 0 0])
  ("c-out" .
   [3 0 0 0 0])
  ("or-gate" .
   [0 0 0 0 0 0 1])
  ("c-in" .
   [6 0 0 0])
  ("half-adder" .
   [0 0 0 1 2 0 0 0 0 0])
  ("truth-table-" .
   [0 0 0 0 0 0 0 0 0 0 0 1])
  ("onegate" .
   [1 0 0 0 0 0 0])
  ("gate" .
   [1 0 0 0])
  ("do" .
   [11 0])
  ("set-signal!" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("and-gate" .
   [0 0 0 0 0 0 0 1])
  ("a2" .
   [3 0])
  ("a1" .
   [4 0])
  ("action" .
   [1 0 0 0 0 0])
  ("insert-queue!" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("make-queue" .
   [0 0 0 0 0 0 1 0 0 0])
  ("sum" .
   [2 0 0])
  ("probe" .
   [1 0 0 0 0])
  ("make-wire" .
   [4 0 0 0 1 0 5 1 0])
  ("get-signal" .
   [0 0 0 0 1 1 2 2 0 0])
  ("the-agenda" .
   [0 0 0 0 0 1 0 0 0 0])
  ("current-time" .
   [1 0 0 0 0 0 0 4 1 0 0 0])
  ("add-action!" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("wire" .
   [3 0 0 0])
  ("circle" .
   [1 0 0 0 0 0])
  ("high" .
   [1 0 0 0])
  ("low" .
   [3 0 0])
  ("cesaro-test" .
   [1 0 0 0 0 0 1 0 0 0 0])
  ("both?" .
   [1 0 0 0 0])
  ("quonk" .
   [1 0 0 0 0])
  ("favourite-restaurant" .
   [0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("an" .
   [7 0])
  ("Babs" .
   [1 0 0 0])
  ("Yabu" .
   [1 0 0 0])
  ("db-fact" .
   [1 0 0 0 0 0 0])
  ("Alice" .
   [1 0 0 0 0])
  ("paired" .
   [2 0 0 0 0 0])
  ("facts" .
   [1 0 0 0 0])
  ("women" .
   [1 0 0 0 0])
  ("woman" .
   [2 0 0 0 0])
  ("man" .
   [2 0 0])
  ("men" .
   [2 0 0])
  ("db-rel" .
   [4 0 1 0 0 0])
  ("first-pal" .
   [1 0 0 0 0 0 0 0 0])
  ("half" .
   [1 0 0 0])
  ("gen-pal" .
   [1 0 0 0 0 0 0])
  ("half-point" .
   [1 0 0 0 0 0 0 0 0 0])
  ("digits-ul" .
   [1 0 0 0 0 0 0 0 0])
  ("mirrored" .
   [0 0 1 0 0 0 0 0])
  ("strm" .
   [2 0 0 0])
  ("strx" .
   [2 0 0 0])
  ("Integer/parseInt" .
   [0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0])
  ("isEven" .
   [1 0 0 0 0 0])
  ("mirror" .
   [1 0 0 0 0 0])
  ("gen-palindromes" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("100" .
   [9 0 0])
  ("digits" .
   [2 0 0 0 0 0])
  ("product" .
   [1 0 0 0 0 0 0])
  ("palindromes" .
   [3 0 0 0 0 0 0 0 0 0 0])
  ("999" .
   [1 0 0])
  ("m35" .
   [1 0 0])
  ("1000" .
   [7 0 0 0])
  ("multiple" .
   [1 0 0 0 0 0 0 0])
  ("multiples" .
   [4 0 0 0 1 0 0 0 0])
  ("new-tag" .
   [0 0 0 0 0 1 0])
  ("projection" .
   [1 0 0 0 2 0 0 0 0 0])
  (":project" .
   [2 0 0 0 0 0 1 0])
  ("project" .
   [5 0 0 0 0 0 1])
  ("nil?" .
   [0 0 0 1])
  (".indexOf" .
   [1 0 0 0 0 1 0 0])
  ("indx" .
   [3 0 0 0])
  ("-complex" .
   [0 0 0 0 1 0 0 0])
  ("complex" .
   [1 0 0 0 0 0 0])
  ("make-" .
   [0 0 0 0 2])
  ("+complex" .
   [2 0 0 0 0 0 0 0])
  ("make-complex" .
   [1 0 0 0 2 0 3 0 0 0 0 1])
  ("attach-type" .
   [0 0 0 0 1 0 0 0 0 0 0])
  ("type" .
   [0 0 1 0])
  ("arg2" .
   [2 0 0 0])
  ("arg1" .
   [3 0 0 0])
  (":angle" .
   [5 0 0 0 0 0])
  (":magnitude" .
   [1 0 0 0 0 1 0 0 0 0])
  ("make-from-mag-ang" .
   [0 0 0 0 2 0 0 0 1 0 0 0 2 0 0 0 0])
  ("apply-generic" .
   [0 0 0 0 1 0 0 0 1 0 0 0 6])
  ("contents" .
   [6 0 0 0 0 0 0 0])
  ("message" .
   [9 0 0 0 0 1 0])
  ("error" .
   [18 0 0 0 0])
  ("datum" .
   [8 0 0 0 0])
  ("proc" .
   [16 0 0 0])
  ("type-tags" .
   [5 0 2 1 0 1 1 0 1])
  ("args" .
   [12 0 0 1])
  (":polar" .
   [2 0 0 1 1 0])
  ("Math/atan2" .
   [0 0 0 0 0 0 0 0 0 1])
  ("Math/sqrt" .
   [2 0 0 0 0 0 0 0 0])
  ("Math/sin" .
   [1 0 0 0 0 0 0 0])
  ("Math/cos" .
   [1 0 0 0 0 0 0 0])
  ("angle" .
   [12 0 0 2 0])
  ("magnitude" .
   [3 0 0 3 0 0 0 0 1])
  ("don" .
   [1 0 0])
  ("make-from-real-imag" .
   [0 0 0 0 2 0 1 0 0 2 0 0 1 0 1 0 0 0 0])
  (":rectangular" .
   [3 0 1 0 3 0 0 0 0 0 0 0])
  ("put" .
   [20 0 1])
  ("tag" .
   [10 0 0])
  ("attach-tag" .
   [1 0 0 3 2 0 1 0 0 2])
  ("imag-part" .
   [0 0 0 3 4 0 0 0 0])
  ("real-part" .
   [6 0 0 0 11 1 0 0 0])
  ("square" .
   [14 0 0 1 1 0])
  ("item" .
   [1 0 0 0])
  ("op-table" .
   [2 0 0 0 0 0 0 1])
  ("lower-bound" .
   [0 0 1 1 0 0 0 0 0 0 0])
  ("player/radius" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("250" .
   [1 0 0])
  ("check-y" .
   [0 0 0 1 0 0 0])
  ("-250" .
   [2 0 0 0])
  ("check-x" .
   [0 0 0 1 0 0 0])
  ("acumulador" .
   [0 0 0 0 0 1 0 0 0 0])
  ("base" .
   [1 0 0 0])
  ("acum" .
   [2 0 0 0])
  ("if" .
   [32 0])
  ("coleccion" .
   [3 0 0 0 1 0 0 0 0])
  ("funcion" .
   [2 0 0 0 0 0 0])
  ("def" .
   [334 0 0])
  ("rs_cridaproc" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("param_cridaproc" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("id_cridaproc" .
   [0 0 0 0 0 0 1 0 0 0 0 0])
  ("rs_assig" .
   [1 0 0 0 0 0 0 0])
  ("exp_assig" .
   [0 0 0 0 0 1 0 0 0])
  ("id_assig" .
   [0 0 0 0 0 1 0 0])
  ("rs_mentre" .
   [1 0 0 0 0 0 0 0 0])
  ("sents_mentre" .
   [0 0 1 0 0 0 0 0 0 0 0 0])
  ("exp" .
   [24 0 0])
  ("exp_mentre" .
   [0 0 0 0 1 0 0 0 0 0])
  ("rs_sents" .
   [1 0 0 0 0 0 0 0])
  ("sent" .
   [1 0 0 0])
  ("rs_rang" .
   [1 0 0 0 0 0 0])
  ("r2" .
   [1 0])
  ("r1" .
   [3 0])
  ("procedure" .
   [2 0 0 0 0 0 0 0 3])
  ("rs_subrang" .
   [0 0 0 0 1 0 0 0 0 0])
  ("id2_subrang" .
   [0 0 0 1 0 0 0 0 0 0 0])
  ("id_subrang" .
   [0 0 0 0 1 0 0 0 0 0])
  ("rs_array" .
   [1 0 0 0 0 0 0 0])
  ("rang" .
   [1 0 0 0])
  ("rang_array" .
   [0 0 0 0 0 1 0 0 0 0])
  ("rs_record" .
   [1 0 0 0 0 0 0 0 0])
  ("decls" .
   [1 0 0 0 0])
  ("declars_record" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("node" .
   [3 0 0 1])
  ("n_defparam" .
   [0 0 0 0 0 1 0 0 0 0])
  ("n_cridaproc" .
   [1 0 0 1 0 0 0 0 0 0 0])
  ("n_assig" .
   [0 0 0 0 0 1 0])
  ("n_mentre" .
   [0 0 0 1 0 0 0 0])
  ("n_sents" .
   [0 0 0 0 1 0 0])
  ("n_rang" .
   [0 0 0 0 1 0])
  ("n_subrang" .
   [0 0 0 1 1 0 0 0 0])
  ("n_array" .
   [1 0 0 0 1 0 0])
  ("n_record" .
   [0 0 0 0 1 0 1 0])
  ("n_param" .
   [3 0 0 0 0 0 0])
  ("n_declars" .
   [2 0 0 0 0 0 0 0 0])
  ("n_declar" .
   [2 0 0 0 0 0 0 0])
  ("declt" .
   [1 0 0 0 0])
  ("declt_declar" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("tipus" .
   [2 0 1 0 0])
  ("declar" .
   [1 0 0 0 1 1])
  ("tipus_declar" .
   [0 0 0 2 0 0 0 0 0 0 0 0])
  ("id_tipus_param" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("id_param" .
   [1 0 0 0 1 1 0 0])
  ("rs_param" .
   [1 0 1 0 1 0 0 0])
  ("id2" .
   [5 0 0])
  ("sents" .
   [5 0 0 1 0])
  ("declars" .
   [2 0 0 1 1 0 0])
  ("param" .
   [2 0 0 0 0])
  ("id" .
   [11 0])
  ("sents_proc" .
   [0 0 0 1 0 1 0 0 0 0])
  ("declars_proc" .
   [0 0 0 2 0 0 0 0 0 0 0 0])
  ("param_proc" .
   [0 0 0 0 0 1 1 0 0 0])
  ("id1" .
   [4 0 0])
  ("id_proc" .
   [1 0 0 0 0 0 0])
  ("pnode" .
   [35 0 3 4 0])
  ("id_nom" .
   [2 0 0 0 0 0])
  ("n_proc" .
   [2 0 0 0 0 0])
  (":x" .
   [12 0])
  (":y" .
   [7 0])
  ("vx" .
   [15 0])
  (":vx" .
   [6 0 0])
  ("vy" .
   [16 0])
  (":vy" .
   [5 0 0])
  ("acceleration" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  (":require" .
   [1 0 0 0 0 0 0 0])
  ("hello-quil.physics" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":as" .
   [11 0 0])
  ("gravity" .
   [2 0 0 0 0 0 0])
  ("0.1" .
   [2 0 0])
  ("phys" .
   [0 0 0 1])
  ("updates" .
   [0 0 0 0 0 0 1])
  ("player" .
   [82 0 1 5 0 2])
  ("pos" .
   [9 0 0])
  (":position" .
   [4 0 0 0 1 0 1 0 2])
  ("vel" .
   [15 0 0])
  (":vel" .
   [10 0 0 0])
  ("air-res" .
   [1 0 0 0 0 1 0])
  ("new-vx" .
   [3 0 0 0 0 0])
  ("new-vy" .
   [3 0 0 0 0 0])
  ("phys/linear-movement" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("new-pos" .
   [0 0 0 1 0 0 0])
  ("init" .
   [1 0 0 0])
  ("update" .
   [2 0 0 0 0 0])
  ("state" .
   [59 0 0 0 1])
  ("radius" .
   [6 0 0 1 0 0])
  ("check-bounds" .
   [1 0 0 0 0 4 0 0 0 0 0 0])
  ("->" .
   [6 0])
  (":pos" .
   [3 0 0 0])
  ("player/posx" .
   [1 0 0 0 0 0 0 1 0 0 0])
  ("player/update" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0])
  ("draw" .
   [3 0 0 0])
  ("q/ellipse" .
   [1 0 0 1 0 0 0 0 0])
  ("posx" .
   [5 0 0 0])
  ("posy" .
   [1 0 0 0])
  (":diameter" .
   [2 0 0 0 0 0 0 0 0])
  ("diam" .
   [3 0 0 0])
  ("player/posy" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("30" .
   [5 0])
  ("position" .
   [3 0 0 0 0 1 0 1])
  ("?assoc-in" .
   [2 0 0 1 0 0 0 0 1])
  ("update-vel" .
   [2 0 0 0 0 0 0 0 0 0])
  ("new-player" .
   [1 0 0 0 0 0 0 0 0 0])
  ("10" .
   [4 0])
  ("boost" .
   [1 0 0 0 0])
  (":complex" .
   [8 0 0 3 5 0 1 0])
  ("done" .
   [3 0 0 0])
  (":make-from-real-imag" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("add" .
   [3 0 0])
  ("make-rat" .
   [1 0 0 0 2 0 2 0])
  ("numer" .
   [13 0 0 0 0])
  ("denom" .
   [10 0 0 3 0])
  (":add" .
   [2 0 0 0])
  (":rational" .
   [6 0 0 3 2 0 1 0 1])
  ("add-rat" .
   [0 0 0 0 1 0 0])
  (":make" .
   [1 0 0 0 0])
  ("calc-gcd" .
   [0 0 0 0 1 0 0 0])
  ("install-rectangular-package" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("install-polar-package" .
   [0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("install-rational-package" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ref-set" .
   [0 0 0 0 0 1 0])
  (":make-from-mag-ang" .
   [0 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0])
  (":sub" .
   [2 0 0 0])
  ("install-complex-package" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":mul" .
   [2 0 0 0])
  ("number?" .
   [0 0 0 0 0 0 1])
  (":else" .
   [26 0 0 0 0])
  (":clj-number" .
   [0 0 0 6 4 0 0 0 0 0 0])
  (":div" .
   [2 0 0 0])
  ("install-clj-number-package" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":equ?" .
   [2 0 0 0 1])
  (":real-part" .
   [0 0 0 0 1 0 0 0 0 0])
  (":imag-part" .
   [0 0 0 1 0 0 0 0 0 0])
  (":zero?" .
   [2 0 0 0 0 0])
  ("coercion-table" .
   [0 0 0 0 2 0 0 0 0 0 0 0 0 0])
  ("type2" .
   [5 0 0 0 0])
  ("type1" .
   [5 0 0 0 0])
  ("make-rational" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("empty-coercion" .
   [0 0 0 0 0 0 0 1 0 0 1 0 0 0])
  ("put-coercion" .
   [0 0 0 0 0 0 3 0 0 0 0 0])
  ("clj-number->rational" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("clj-number->complex" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("get-coercion" .
   [0 0 0 0 0 0 2 1 1 0 0 0])
  ("t1->t2" .
   [2 0 0 0 0 0])
  ("t2->t1" .
   [1 0 1 0 0 0])
  ("make-complex-from-real-imag" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":numer" .
   [2 0 0 0 0 0])
  (":denom" .
   [1 0 0 0 0 0])
  ("rational->complex" .
   [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("lower" .
   [2 0 0 0 0])
  ("coerce" .
   [5 0 0 0 1 1])
  ("raise" .
   [4 0 0 0 0])
  ("type-tag" .
   [1 0 2 0 0 0 1 0])
  ("=level?" .
   [1 0 0 0 0 0 1])
  ("level" .
   [14 0 0 0 0])
  ("coercion-tower" .
   [1 0 1 0 5 1 0 0 0 0 0 0 0 1])
  ("assoc-in" .
   [0 0 0 0 1 0 0 0])
  ("max-level" .
   [1 0 0 0 0 0 0 1 0])
  ("get-level-tower" .
   [0 0 0 0 0 0 1 1 0 0 0 0 0 0 0])
  ("get-type-tower" .
   [0 0 0 0 0 2 1 0 0 0 0 0 0 0])
  ("next-type" .
   [1 0 0 0 0 0 0 1 0])
  ("put-coercion-tower" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("empty-coercion-tower" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("lower?" .
   [1 0 0 0 0 0])
  ("new-args" .
   [1 0 0 0 0 0 1 0])
  ("apply" .
   [0 0 0 2 1])
  ("same" .
   [0 0 0 1])
  ("site-defaults" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("site-config" .
   [0 0 1 0 0 0 0 0 0 0 0])
  ("example-post" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  ("request" .
   [1 0 0 0 0 0 0])
  ("post-value" .
   [0 0 0 0 0 0 1 0 0 0])
  ("match" .
   [2 0 0 0 0])
  ("deriv" .
   [4 0 0 1 0])
  ("de2" .
   [1 0 0])
  ("de1" .
   [1 0 0])
  ("number" .
   [6 0 0 0 0 0])
  ("simplify" .
   [10 0 0 0 0 1 0 0])
  ("one?" .
   [1 0 0 0])
  ("reduce-expr" .
   [0 0 0 0 1 0 0 0 0 0 1])
  ("try-simplify" .
   [0 0 0 1 0 0 1 0 0 0 0 0])
  ("cos" .
   [1 0 0])
  ("trials" .
   [5 0 0 0 0 0])
  ("10000" .
   [2 0 0 0 0])
  ("trials-remaining" .
   [1 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0])
  ("trials-passed" .
   [1 0 0 0 1 1 0 0 0 0 0 0 0])
  ("experiment" .
   [1 0 0 0 0 0 0 0 0 0])
  ("recur" .
   [25 0 0 0 0])
  ("gcd" .
   [2 0 0])
  ("first-candidate" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":name" .
   [1 0 0 0 0])
  (":rank" .
   [3 0 0 0 0])
  ("candidates" .
   [0 0 0 0 0 1 0 0 0 0])
  ("cost" .
   [4 0 0 0])
  ("candidate-list" .
   [0 0 0 0 3 0 1 0 0 0 0 0 0 0])
  ("current-candidate" .
   [0 0 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0])
  ("hired" .
   [2 0 0 0 0])
  ("better" .
   [1 0 0 0 0 0])
  ("merge-sort" .
   [1 0 0 0 0 0 0 1 0 0])
  ("mid-point" .
   [5 0 0 3 0 0 0 0 0])
  ("null?" .
   [1 0 0 0 0])
  ("list1" .
   [1 0 0 0 0])
  ("color" .
   [4 0 0 0 0])
  ("colores" .
   [1 0 0 0 0 0 0])
  ("numeros" .
   [3 0 0 0 0 0 0])
  ("clojure.math.combinatorics" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("crear-baraja" .
   [0 0 0 0 0 1 0 0 0 0 0 0])
  (":bastos" .
   [3 0 0 1 1 0 0])
  (":oros" .
   [4 0 0 0 0])
  (":copas" .
   [1 0 0 0 0 0])
  (":espadas" .
   [2 0 0 2 0 0 0 0])
  (":num" .
   [8 0 0 0])
  ("carta" .
   [8 0 0 0 0])
  ("baraja" .
   [3 0 0 0 0 0])
  ("repartir" .
   [3 0 0 0 0 0 0 0])
  ("shuffle" .
   [2 0 0 0 0 0 0])
  ("lamo" .
   [2 0 0 0])
  ("madona" .
   [2 0 0 0 0 0])
  ("llengo-bona" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("llengo-xereca" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("manilla-bona" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("manilla-xereca" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("contains?" .
   [0 0 0 0 0 0 0 1 0])
  ("peces" .
   [3 0 0 0 0])
  ("palo" .
   [5 0 0 0])
  (":palo" .
   [3 0 0 0 0])
  ("numero" .
   [1 0 0 0 0 0])
  ("create-ns" .
   [0 0 0 1 0 0 0 0 0])
  ("crea-carta" .
   [1 0 0 0 0 0 1 0 0 0])
  ("pessa?" .
   [2 0 0 2 1 3])
  ("carta1" .
   [2 0 1 6 0 3])
  ("carta2" .
   [4 0 2 4 0 0])
  ("numero-mes-alt" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":p2" .
   [15 0 0])
  ("nil" .
   [26 0 0])
  ("pessa-major" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("pos1" .
   [2 0 0 0])
  ("pos2" .
   [1 0 0 0])
  (":p1" .
   [18 0 0])
  ("jugador" .
   [1 0 0 0 0 0 0])
  (":img" .
   [1 0 0 0])
  ("300" .
   [5 0 0])
  ("truc-gui.table" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("temp" .
   [8 0 0 0])
  (":table" .
   [3 0 0 0 0 0])
  (":turn" .
   [6 0 0 0 0])
  ("cards-played" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("turn" .
   [1 0 0 0])
  ("ncards-played" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("set-turn" .
   [2 0 0 0 0 0 1 0])
  ("his-turn?" .
   [0 0 0 1 0 0 0 0 2])
  ("get-round-table" .
   [4 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("get-round" .
   [1 0 0 0 0 0 0 0 1])
  ("get-table" .
   [1 0 0 0 0 0 2 0 0])
  ("get-hand" .
   [1 0 0 0 0 1 1 1])
  ("get-slot" .
   [1 0 0 0 0 0 0 0])
  ("get-player" .
   [1 0 0 0 0 0 0 0 0 0])
  ("set-player" .
   [1 0 0 0 0 0 0 0 0 0])
  ("set-hand" .
   [1 0 0 0 0 0 0 0])
  ("set-time" .
   [2 0 0 0 0 0 1 0])
  ("peek-card" .
   [2 0 0 0 0 0 0 1 0])
  ("get-turn" .
   [2 0 0 0 0 0 1 0])
  ("get-time" .
   [2 0 0 0 0 0 1 0])
  ("Card" .
   [1 0 0 0])
  (":card" .
   [3 0 0 0 1])
  ("<=" .
   [1 0])
  ("rotation" .
   [2 0 0 0 0 0 0 0])
  ("ncards-placed" .
   [0 0 0 0 1 0 1 0 0 0 0 0 1])
  ("get-angle" .
   [0 0 0 0 0 0 1 0 0])
  ("get-card" .
   [1 0 0 0 0 0 0 1])
  ("ncards" .
   [1 0 0 0 0 0])
  ("peek-angle" .
   [0 0 0 0 0 0 1 0 0 0])
  ("0.3" .
   [1 0 0])
  ("ncards1" .
   [2 0 0 0 0 0 0])
  ("ncards2" .
   [2 0 0 0 0 0 0])
  ("board" .
   [8 0 0 0 0])
  ("switch-state" .
   [0 0 0 1 0 0 0 1 0 0 0 0])
  ("HIGH" .
   [2 0 0 0])
  ("port" .
   [2 0 0 0])
  ("pin-mode" .
   [1 0 0 0 0 0 0 0])
  ("INPUT" .
   [1 0 0 0 0])
  ("add-queen" .
   [1 0 0 0 0 0 0 0 0])
  ("world" .
   [4 0 0 0 0])
  ("size" .
   [32 0 0 0])
  ("neighbors" .
   [2 0 0 0 0 0 0 0 0])
  ("deltas" .
   [2 0 0 0 0 0])
  ("new-coord" .
   [2 0 0 0 0 0 0 0 0])
  ("collection" .
   [1 0 0 0 0 0 0 0 0 0])
  ("txt" .
   [1 0 0])
  ("dic" .
   [5 0 0])
  ("paraules" .
   [1 0 0 0 0 0 0 0])
  ("traduir-paraula" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("draw-shape" .
   [1 0 0 0 0 0 0 1 0 0])
  (":floor" .
   [1 0 0 0 0 0])
  (":color" .
   [1 0 0 0 0 0])
  ("x1" .
   [2 0])
  ("y1" .
   [2 0])
  ("object" .
   [9 0 0 0 0 0])
  ("x2" .
   [2 0])
  ("y2" .
   [2 0])
  ("20" .
   [9 0])
  ("q/width" .
   [1 0 0 0 0 0 0])
  (":left-wall" .
   [3 0 0 0 0 0 1 0 0 0])
  (":right-wall" .
   [0 0 0 0 0 0 1 0 0 0 0])
  ("left-wall" .
   [1 0 0 0 0 0 1 0 0])
  ("ball" .
   [7 0 0 0])
  ("collision?" .
   [0 0 0 0 0 1 0 0 0 0])
  (":radius" .
   [1 0 0 0 0 0 0])
  ("vel-x" .
   [0 0 0 0 1])
  ("vel-y" .
   [0 0 0 0 1])
  ("make-drag" .
   [1 0 0 0 0 0 0 0 1])
  ("update-in" .
   [0 0 0 0 0 0 0 0 1])
  ("drag" .
   [4 0 0 0])
  ("air-resistance" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("side" .
   [1 0 0 0])
  ("handle-ball-collision" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("floor-resistance" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("new" .
   [2 0 0])
  ("vi" .
   [1 0])
  (":lambda" .
   [10 0 0 0 0 0 0])
  ("First" .
   [20 0 0 0 0])
  ("iteracio-element" .
   [1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":id" .
   [5 0 0])
  ("afegeix" .
   [1 0 0 0 0 0 0])
  ("afegeix-lambdas" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("difference" .
   [2 0 0 0 2 1 1 0 0 0])
  ("anterior-first" .
   [0 0 0 0 1 0 1 2 0 0 0 0 0 0])
  ("declare" .
   [0 0 0 0 1 0 0])
  ("fbuit" .
   [2 0 0 0 0])
  (":$" .
   [4 0])
  ("init-follow" .
   [0 0 0 0 0 0 0 0 2 0 0])
  ("produccions" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("anterior-follow" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 1 0])
  ("Follow" .
   [26 0 0 1 0 0])
  ("iteracio-follow" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 1 1])
  ("iteracio-element-follow" .
   [0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("no" .
   [5 0])
  ("alpha2" .
   [4 0 0 0 0 0])
  ("union" .
   [6 0 0 0 0])
  ("fda2" .
   [2 0 0 0])
  ("msg" .
   [14 0 0])
  ("shift-letter" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("shift-letter*" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("ll_lc" .
   [1 0 0 0 0])
  ("ul_lc" .
   [1 0 0 0 0])
  ("integers-starting-from" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("remaining-numbers" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("divisible?" .
   [2 0 0 0 0 0 0 0 0 0])
  ("program" .
   [9 0 0 0 0 0 0])
  ("token" .
   [6 0 0 0 0])
  ("read_tk" .
   [0 0 0 0 1 0 0])
  ("tk" .
   [2 0])
  ("value" .
   [8 0 0 0 0])
  ("f" .
   [1])
  ("current" .
   [7 0 0 0 0 0 1])
  ("s_openp" .
   [2 0 0 0 0 0 0])
  ("null" .
   [4 0 0 0])
  ("s_closep" .
   [1 0 0 0 0 0 0 0])
  ("s_quote" .
   [1 0 0 0 0 0 0])
  ("EOI" .
   [1 0 0])
  ("eoi" .
   [1 0 0])
  ("OPENP" .
   [1 0 0 0 0])
  ("CLOSEP" .
   [1 0 0 0 0 0])
  ("QUOTE" .
   [0 0 0 1 0])
  ("ERROR" .
   [1 0 0 0 0])
  ("is_number" .
   [1 0 0 0 0 0 0 0 0])
  ("include" .
   [3 0 0 0 0 0 0])
  ("c" .
   [4])
  ("read_char" .
   [1 0 0 0 0 0 0 1 0])
  ("num" .
   [3 0 0])
  ("lit_num" .
   [1 0 0 0 0 0 0])
  ("isdigit" .
   [1 0 0 0 0 0 0])
  ("shift" .
   [13 0 0 0 0])
  ("circular-alphabet" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0])
  ("alphabet-length" .
   [1 0 0 0 1 0 0 0 0 0 2 0 0 0 0])
  ("vigenere-square" .
   [1 0 0 0 0 0 1 0 0 0 0 0 1 0 0])
  ("alphabet" .
   [9 0 0 0 2 3 0 2])
  ("make-vigenere-row" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("letter" .
   [1 0 0 0 0 0])
  ("shifted-alphabet" .
   [1 0 0 0 0 0 0 1 0 1 0 0 0 0 0 1])
  ("keyw" .
   [1 0 0 0])
  ("krest" .
   [3 0 0 0 0])
  ("encrypt" .
   [4 0 0 0 0 0 1])
  ("make-key" .
   [3 0 0 0 0 0 0 1])
  ("crypt" .
   [3 0 0 1 0])
  ("shifted" .
   [1 0 0 0 0 0 0])
  ("make-vigenere-inverse-row" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("vigenere-decrypt-square" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("alphabet-position" .
   [0 0 0 0 0 0 0 0 1 0 1 1 1 0 0 0 0])
  ("klpos" .
   [2 0 0 0 0])
  ("position-alphabet" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("newpos" .
   [1 0 0 0 0 0])
  ("encrypt-letter" .
   [1 0 0 1 0 0 0 0 0 0 1 0 0 1])
  ("mrest" .
   [2 0 0 0 0])
  ("lpos" .
   [1 0 0 0])
  ("decrypt-letter" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("nouestat" .
   [3 0 0 0 0 0 0 0])
  ("lazy-seq" .
   [0 0 0 0 1 0 0 0])
  ("make-primes" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("generate-primes" .
   [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0])
  ("integers-starting-at" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("ordered-vec" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("binary-search" .
   [0 0 0 0 0 0 2 0 0 0 0 0 0])
  ("word" .
   [11 0 0 0])
  ("length" .
   [5 0 0 0 0 0])
  ("palindrome?" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("arr" .
   [1 0 0])
  ("newarr" .
   [1 0 0 0 0 0])
  ("doubleMe" .
   [2 0 0 0 0 0 0 0])
  ("fibs" .
   [5 0 0 0])
  ("min" .
   [11 0 0])
  ("myMin" .
   [1 0 0 0 0])
  ("overwrite-r!" .
   [0 0 0 0 0 1 0 1 0 0 0 0])
  ("@z" .
   [1 0])
  ("reset-reg!" .
   [0 0 0 0 0 0 0 1 0 0])
  ("popv" .
   [9 0 0 0])
  ("@rt" .
   [1 0 0])
  ("@rx" .
   [1 0 0])
  ("registers" .
   [7 0 0 1 1 1 0 0 1])
  ("rgs" .
   [22 0 0])
  ("swap!" .
   [0 0 0 1 1])
  ("@rgs" .
   [2 0 0 0])
  ("pushv" .
   [8 0 0 0 0])
  ("0.0" .
   [5 0 0])
  ("x<->y" .
   [1 0 1 0 0])
  ("regs" .
   [2 0 0 0])
  ("make-registers" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("rpn-calc.rpm-sim" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("reg->pos" .
   [1 0 0 0 0 0 0 0])
  ("Double." .
   [3 0 0 0 0 0 0])
  ("new-val" .
   [1 0 0 0 0 0 0])
  ("throw" .
   [3 0 0 0 0])
  ("Exception" .
   [1 0 0 0 0 0 0 0 0])
  ("ta" .
   [2 0])
  ("genera" .
   [16 0 0 0 2 0])
  ("d_descripcio" .
   [0 0 0 0 0 2 0 0 0 0 0 0])
  ("null_id" .
   [1 0 0 0 0 0 0])
  ("op3_call" .
   [1 0 0 0 0 0 0 0])
  ("gca_call" .
   [2 0 0 0 0 0 0 0])
  ("put_line" .
   [1 0 0 0 0 0 0 0])
  ("tipus_descripcio" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("image" .
   [1 0 0 0 0])
  ("td" .
   [1 0])
  ("cons" .
   [2 0 0 0])
  ("ts" .
   [1 0])
  ("TP" .
   [3 0])
  ("np" .
   [3 0])
  ("ocup" .
   [1 0 0 0])
  ("boolean" .
   [1 0 0 0 0 0 0])
  ("te_param" .
   [1 0 0 0 0 1 0 0])
  ("op3_menysu" .
   [0 0 0 0 0 0 0 1 0 0])
  ("op3_suma" .
   [0 0 0 0 0 1 0 0])
  ("op3_resta" .
   [0 0 0 0 0 0 0 1 0])
  ("gca_suma" .
   [3 0 0 0 0 0 2 0])
  ("instr3a" .
   [0 0 0 0 0 1 1])
  ("en" .
   [3 0])
  ("genera_comentari" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("genera_LD" .
   [1 0 0 0 0 0 0 0 1])
  ("b3" .
   [1 0])
  ("ebx" .
   [1 0 0])
  ("genera_ST" .
   [3 0 0 0 0 0 0 0 0])
  ("gca_menysu" .
   [2 0 0 0 0 0 0 0 1 0])
  ("a3" .
   [2 0])
  ("gca_resta" .
   [1 0 0 0 0 1 0 1 0])
  ("op3_prod" .
   [0 0 0 0 0 0 1 0])
  ("gca_prod" .
   [3 0 0 0 0 0 0 0])
  ("op3_div" .
   [1 0 0 0 0 0 0])
  ("op3_mod" .
   [1 0 0 0 0 0 0])
  ("op3_and" .
   [1 0 0 0 0 0 0])
  ("op3_or" .
   [1 0 0 0 0 0])
  ("op3_not" .
   [1 0 0 0 0 0 0])
  ("op3_goto" .
   [1 0 0 0 0 0 0 0])
  ("op3_ig" .
   [0 0 0 0 0 1])
  ("op3_dif" .
   [1 0 0 0 0 0 0])
  ("op3_lt" .
   [1 0 0 0 0 0])
  ("op3_gt" .
   [1 0 0 0 0 0])
  ("op3_noop" .
   [0 0 0 0 0 0 0 1])
  ("gca_goto" .
   [2 0 0 0 0 0 0 0])
  ("gca_gt" .
   [3 0 0 0 0 0])
  ("gca_ge" .
   [3 0 0 0 0 0])
  ("gca_mod" .
   [2 0 0 0 0 0 0])
  ("etiq" .
   [4 0 0 0])
  ("etiq_image" .
   [0 0 0 0 0 0 1 2 0 0])
  ("etiq_inicial" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("novaetiq" .
   [0 0 0 0 0 1 0 0])
  ("e3" .
   [1 0])
  ("gca_etiq" .
   [0 0 0 0 0 0 1 0])
  ("gca_ig" .
   [1 0 0 0 0 0])
  ("gca_not" .
   [1 0 0 0 0 0 0])
  ("d2" .
   [1 0])
  ("addl" .
   [1 0 0 0])
  ("tagged-list?" .
   [0 0 0 0 0 0 1 1 0 0 0 0])
  ("scheme-evaluator.primitives" .
   [0 0 0 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  (":refer" .
   [4 0 0 0 0 0])
  (":all" .
   [1 0 0 0])
  ("primitive-procedure?" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("scheme-evaluator.data-structures" .
   [0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0 0 0 0 0 0])
  ("compound-procedure?" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("setup-environment" .
   [0 0 0 0 4 4 0 0 0 0 1 0 0 0 0 0 0])
  ("define" .
   [12 0 0 0 0 0])
  ("env" .
   [11 0 0])
  ("new-env" .
   [8 0 0 1 2 0 0])
  ("set!" .
   [4 0 0 0])
  ("lambda" .
   [14 0 0 0 0 0])
  ("Exception." .
   [2 0 0 0 0 0 0 0 0 0])
  ("plustwo" .
   [1 0 0 0 0 0 0])
  ("base-env" .
   [2 0 0 0 0 0 2 1])
  ("list-of-values" .
   [0 0 0 0 0 0 1 1 0 0 0 0 0 0])
  ("make-frame" .
   [3 0 0 0 0 0 0 0 0 0])
  ("symbols" .
   [1 0 0 0 0 0 0])
  ("values" .
   [3 0 0 0 0 0])
  ("quoted" .
   [1 0 0 0 0 0])
  ("primitive-procedure-objects" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("lookup-variable-value" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("f#" .
   [6 0])
  ("t#" .
   [3 0])
  ("lambda-parameters" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("lambda-body" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("make-procedure" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("begin" .
   [1 0 0 0 0])
  ("operands" .
   [1 0 0 0 0 0 0 0])
  ("extend-environment" .
   [0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0])
  ("operator" .
   [1 0 0 0 0 0 0 0])
  ("procedure-body" .
   [1 0 0 0 0 0 0 0 0 0 0 1 0 1])
  ("assignment-variable" .
   [1 0 0 0 0 0 0 0 0 1 0 0 0 1 0 0 1 0 0])
  ("assignment-value" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("set-variable-value" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("@env" .
   [5 0 0 0])
  ("definition-variable" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 1])
  ("definition-value" .
   [1 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("variable" .
   [3 0 0 0 1 0 0 0])
  ("define-variable" .
   [1 0 0 0 0 0 0 0 0 1 1 0 0 0 0])
  ("eval-definition" .
   [0 0 0 0 0 0 0 0 1 0 0 1 0 0 0])
  ("env0" .
   [1 0 0 0])
  ("body" .
   [5 0 0 0])
  ("arguments" .
   [2 0 0 0 0 0 0 0 0])
  ("params" .
   [4 0 0 0 0 0])
  ("procedure-parameters" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0])
  ("procedure-environment" .
   [0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("frame" .
   [3 0 0 0 0])
  ("proc-env" .
   [1 0 0 0 0 0 0 0])
  ("input-prompt" .
   [0 0 0 0 0 0 0 0 2 0 0 0])
  ("driver-loop" .
   [1 0 0 0 0 0 1 0 0 0 0])
  ("prompt-for-input" .
   [0 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0])
  ("output" .
   [3 0 0 0 0 0])
  ("the-global-environment" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("announce-output" .
   [0 0 0 0 3 0 0 0 0 0 0 0 0 0 0])
  ("output-prompt" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0])
  ("user-print" .
   [1 0 0 0 1 0 0 1 0 0])
  ("string" .
   [2 0 0 0 0 0])
  ("compound-procedure" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("<procedure-env>" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("read-input" .
   [0 0 0 0 0 0 0 0 2 0])
  ("read-string" .
   [0 0 0 0 0 0 0 0 1 0 0])
  ("chip" .
   [23 0 0 0])
  ("pc" .
   [5 0])
  ("incrementPC" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("chip8" .
   [6 0 0 0 0])
  ("opcode" .
   [3 0 0 0 0 0])
  ("cpuNULL" .
   [0 0 0 2 0 0 0])
  ("there" .
   [0 0 0 2 0])
  ("int" .
   [0 0 2])
  ("1000000" .
   [3 0 0 0 0 0 0])
  ("usec" .
   [1 0 0 0])
  ("0xF" .
   [2 0 0])
  ("deftest" .
   [1 0 0 0 0 0 0])
  ("testing" .
   [1 0 0 0 0 0 0])
  ("binding-vars" .
   [1 0 0 0 0 1 0 0 0 0 0 0])
  ("binding-exps" .
   [0 0 0 0 1 0 0 0 0 1 0 0])
  ("let->lambda" .
   [0 0 0 0 0 2 0 0 0 0 0])
  ("scheme-evaluator.syntax" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("make-lambda" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("let?" .
   [1 0 0 0])
  (":let" .
   [1 0 0 0])
  ("incanter.core" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("sandwiches" .
   [0 0 0 1 0 0 0 0 0 0])
  ("poll-person" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("generate-sandwitch-dataset" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("dataset" .
   [13 0 2 0 2 0 0])
  ("take-sample" .
   [2 0 0 0 0 0 0 1 0 0 1])
  ("median" .
   [2 0 0 0 0 0])
  ("sample" .
   [9 0 0 1 0 0])
  ("sd1" .
   [1 0 0])
  ("sd2" .
   [1 0 0])
  ("sd-1" .
   [5 0 0 0])
  ("accum" .
   [1 0 0 0 0])
  ("sd1-1" .
   [1 0 0 0 0])
  ("sumatorio" .
   [0 0 0 0 0 1 0 0 0])
  ("print-sample-info" .
   [0 0 0 0 0 0 0 0 0 1 0 1 0 0 0 0 0])
  (":mean" .
   [4 0 0 0 0])
  ("data" .
   [6 0 0 0])
  ("mean" .
   [11 0 0 0])
  (":sdn" .
   [4 0 0 0])
  ("sd-n" .
   [1 0 0 0])
  (":sdn-1" .
   [4 0 0 0 0 0])
  ("data-info" .
   [2 0 1 0 0 0 0 0 0])
  ("d-info" .
   [2 0 0 0 0 0])
  ("repeatedly" .
   [0 0 0 0 0 0 0 0 1 0])
  ("selector" .
   [1 0 0 0 0 0 0 0])
  ("samples" .
   [3 0 0 0 0 0 0])
  ("take-samples" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("nsamples" .
   [2 0 0 0 0 0 0 0])
  ("s-info" .
   [2 0 0 0 1 0])
  ("average-of-samples" .
   [0 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0])
  ("Average" .
   [0 0 0 0 0 0 1])
  ("wait-retry-time" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("get-fork" .
   [1 0 0 0 0 0 0 0])
  ("left-fork" .
   [6 0 0 0 0 0 0 0 0])
  ("right-fork" .
   [5 0 0 0 0 1 0 0 0 0])
  ("release-fork" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("eat" .
   [1 0 0])
  ("release-forks" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("thread" .
   [1 0 0 0 0 0])
  ("judge-chan" .
   [3 0 0 0 0 0 0 0 0 0])
  ("move" .
   [4 0 0 0])
  ("apply-move" .
   [1 0 0 0 0 0 0 0 0 0])
  ("round-winner" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("next-round" .
   [2 0 0 0 0 0 0 0 0 0])
  (":slots" .
   [2 0 0 0 0 0])
  ("rounds-played" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("new-table" .
   [1 0 0 0 0 0 0 0 0])
  ("lastname" .
   [7 0 0 0 0 0 0 1])
  (":lastname" .
   [1 0 0 0 0 0 0 0 0])
  ("val" .
   [1 0 0])
  ("function" .
   [1 0 0 0 0 0 0 0])
  ("updateSearch" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("var" .
   [2 0 0])
  ("searchByName" .
   [0 0 0 0 0 0 0 0 1 0 0 0])
  ("firstname" .
   [2 0 0 0 0 0 0 0 0])
  ("append" .
   [1 0 0 0 0 0])
  ("users" .
   [1 0 0 0 0])
  ("_id" .
   [2 0 0])
  ("student" .
   [2 0 0 0 0 0 0])
  ("scores" .
   [10 0 0 0 0 0])
  ("students" .
   [1 0 0 0 0 0 0 0])
  ("new_scores" .
   [1 0 0 0 0 0 0 0 0 0])
  ("removeLowestScore" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("lowest" .
   [6 0 0 0 0 0])
  ("find_lowest_score" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("lowest_score" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("homework" .
   [1 0 0 0 0 0 0 0])
  ("math" .
   [2 0 0 0])
  ("distance" .
   [1 0 0 0 0 0 0 0])
  ("conservar" .
   [5 0 0 0 0 0 0 0 0])
  ("raw_input" .
   [0 0 0 1 0 0 0 0 0])
  (">=" .
   [1 0])
  ("Math/atan" .
   [1 0 0 0 0 0 0 0 0])
  ("Math/PI" .
   [2 0 0 0 0 0 0])
  ("euclidean-dist" .
   [0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("atan2" .
   [1 0 0 0 0])
  ("point-potential" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":prev" .
   [4 0 0 0 0])
  ("point" .
   [14 0 0 0 0])
  ("prev" .
   [6 0 0 0])
  (":total" .
   [4 0 0 0 0 0])
  ("dist" .
   [6 0 0 0])
  ("total" .
   [2 0 0 0 0])
  ("total-dist" .
   [3 0 0 0 0 1 0 0 1 2])
  (":path" .
   [4 0 0 0 0])
  (":dist" .
   [2 0 0 0 0])
  ("combo" .
   [1 0 0 0 0])
  ("current-path" .
   [1 0 0 0 0 1 0 0 0 0 0 0])
  ("last-point" .
   [1 0 0 0 0 0 0 0 0 0])
  ("shortest-path" .
   [0 0 0 0 0 0 0 1 1 0 0 0 1])
  ("pmd" .
   [2 0 0])
  ("point-min-dist" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("best-p" .
   [1 0 0 0 0 0])
  (":best-p" .
   [3 0 0 0 0 0 0])
  (":best-d" .
   [2 0 0 0 0 0 0])
  ("combo/permutations" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  ("camins" .
   [1 0 0 0 0 0])
  ("punts" .
   [2 0 0 0 0])
  ("shortest-path-robotica" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("camib" .
   [3 0 0 0 0])
  ("camir" .
   [3 0 0 0 0])
  ("res" .
   [2 0 0])
  ("fib" .
   [6 0 0])
  ("n-2" .
   [2 0 0])
  ("n-1" .
   [3 0 0])
  ("make-fib" .
   [2 0 0 0 0 0 0 0])
  ("find_all" .
   [1 0 0 0 0 0 0 0])
  ("tags" .
   [4 0 0 0])
  ("get_text" .
   [1 0 0 0 0 0 0 0])
  ("aux" .
   [1 0 0])
  ("sistemes-inteligents-opcional.my-proxy-table" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1])
  ("natrs" .
   [6 0 0 0 0])
  (":key" .
   [2 0 0 0])
  ("nelems" .
   [2 0 0 0 0 0])
  ("footer" .
   [1 0 0 0 0 0])
  (":listen" .
   [2 0 0 0 0 0 0])
  (":action" .
   [2 0 0 0 0 0 0])
  ("swc/alert" .
   [2 0 0 0 0 0 0 0 0])
  ("header" .
   [1 0 0 0 0 0])
  ("swc/flow-panel" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  (":items" .
   [1 0 0 0 0 0])
  ("swc/label" .
   [1 0 0 0 0 0 0 0 0])
  ("swc/button" .
   [0 0 0 0 0 0 0 0 1 0])
  ("text" .
   [1 0 0 0])
  ("tb-natrs" .
   [1 0 2 0 0 0 0 1])
  ("tb-nels" .
   [0 0 1 0 0 1 1])
  ("make-table-model" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("nels" .
   [1 0 0 0])
  ("new-model" .
   [1 0 0 0 0 0 0 0 0])
  (":width" .
   [1 0 0 0 0 0])))
